import Head from 'next/head';
import axios from 'axios';
import { useState } from 'react';

const API_KEY = process.env.NEXT_PUBLIC_API_KEY;

export default function Home() {
  const [videoUrl, setVideoUrl] = useState('');
  const [thumbnailUrl, setThumbnailUrl] = useState('');

  const extractVideoId = (link) => {
    const youtubeRegex =
      /^(https?\:\/\/)?(www\.)?(youtube\.com|youtu\.?be)\/.+$/;
    const idRegex = /v=([^&]+)/;

    if (!youtubeRegex.test(link)) {
      return null;
    }

    const videoId = link.match(idRegex);

    if (!videoId || videoId.length < 2) {
      return null;
    }

    return videoId[1];
  };

  const getThumbnail = async () => {
    try {
      const videoId = extractVideoId(videoUrl);
      const response = await axios.get(
        `https://www.googleapis.com/youtube/v3/videos?part=snippet&id=${videoId}&key=${API_KEY}`
      );
      const thumbnail = response.data.items[0].snippet.thumbnails.maxres.url;
      setThumbnailUrl(thumbnail);
    } catch (error) {
      console.error(error);
    }
  };

  return (
    <>
      <Head>
        <title>Thumbnail Downloader</title>
        <meta
          name='description'
          content='Generated by create next app'
        />
        <meta
          name='viewport'
          content='width=device-width, initial-scale=1'
        />
        <link
          rel='icon'
          href='/favicon.ico'
        />
      </Head>
      <main className='flex flex-col justify-center  items-center'>
        <h2 className='my-5 text-white text-4xl'>Thumbnail Downloader</h2>
        <input
          className='text-white my-3 py-2 px-4 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-600 focus:border-transparent'
          type='text'
          placeholder='Enter video link here'
          value={videoUrl}
          onChange={(event) => setVideoUrl(event.target.value)}
        />
        <button
          className='my-3 py-2 px-4 bg-blue-600 text-white font-semibold rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-600 focus:ring-opacity-50'
          onClick={getThumbnail}
        >
          Get thumbnail
        </button>
        {thumbnailUrl && (
          <img
            src={thumbnailUrl}
            alt='Video Thumbnail'
          />
        )}
      </main>
    </>
  );
}
